import { Popover, PopoverButton, PopoverPanel } from "@headlessui/react";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState } from "react";

import { api } from "~/utils/api";

export default function Home() {
	const router = useRouter();
	// For now we create a new design when the user clicks the "Create design" button on this page
	const [newName, setNewName] = useState("");
	const utils = api.useUtils();
	const { data: quotes, isLoading: isLoadingQuotes } =
		api.design.getAll.useQuery();
	
		const createDesign = api.design.create.useMutation({
		onSuccess: async (created) => {
			await utils.design.getAll.invalidate();
			void router.push(`/drawing/${created.id}`);
		},
	});

	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
				<div className="container flex flex-col items-center justify-center gap-12 px-4 py-16">
					<h1 className="font-extrabold text-5xl text-white tracking-tight sm:text-[5rem]">
						Drawing
					</h1>
					<div className="flex max-w-xl flex-col gap-4 rounded-xl bg-white/10 p-4 text-white">
						<form
							onSubmit={(e) => {
								e.preventDefault();
								if (!newName.trim() || createDesign.isPending) return;
								createDesign.mutate({ name: newName.trim() });
							}}
							className="flex items-center gap-2"
						>
							<label htmlFor="designName" className="sr-only">
								Design name
							</label>
							<input
								id="designName"
								type="text"
								value={newName}
								onChange={(e) => setNewName(e.target.value)}
								placeholder="New design name"
								className="w-full rounded-md bg-white/5 px-3 py-2 text-white placeholder-white/60 outline-none ring-1 ring-white/15 focus:ring-white/30"
							/>
							<button
								type="submit"
								disabled={!newName.trim() || createDesign.isPending}
								className="rounded-md bg-white/20 px-3 py-2 font-semibold text-sm hover:bg-white/30 disabled:opacity-50"
							>
								{createDesign.isPending ? "Creating…" : "Create design"}
							</button>
						</form>
						<h3 className="font-bold text-2xl">Designs</h3>
						{isLoadingQuotes && (
							<div className="text-sm text-white/80">Loading designs…</div>
						)}
						{!isLoadingQuotes && (quotes?.length ?? 0) === 0 && (
							<div className="text-sm text-white/80">
								No designs yet. Run the seed to create samples.
							</div>
						)}
						{!isLoadingQuotes && (quotes?.length ?? 0) > 0 && (
							<ul className="flex flex-col gap-2">
								{(quotes ?? []).map((q) => (
									<li key={q.id}>
										<Link
											className="block rounded-md bg-white/5 px-3 py-2 hover:bg-white/15"
											href={`/drawing/${q.id}`}
										>
											<span className="font-semibold text-lg">{q.name}</span>
											<span className="ml-2 text-white/70 text-xs">{q.id}</span>
										</Link>
									</li>
								))}
							</ul>
						)}
					</div>
				</div>
			</main>
		</>
	);
}
