import type { Config } from 'tailwindcss'

export default {
    content: ['./src/**/*.{js,ts,jsx,tsx}'],
    theme: {
        screens: {
            sm: '640px',
            md: '768px',
            lg: '1024px',
            xl: '1280px',
            '2xl': '1536px',
            '3xl': '1920px',
        },
        colors: {
            transparent: 'transparent',
            current: 'currentColor',
            black: '#000',
            white: '#fff',
            gray: {
                25: 'rgb(var(--color-gray-25) / <alpha-value>)',
                50: 'rgb(var(--color-gray-50) / <alpha-value>)',
                100: 'rgb(var(--color-gray-100) / <alpha-value>)',
                200: 'rgb(var(--color-gray-200) / <alpha-value>)',
                300: 'rgb(var(--color-gray-300) / <alpha-value>)',
                400: 'rgb(var(--color-gray-400) / <alpha-value>)',
                500: 'rgb(var(--color-gray-500) / <alpha-value>)',
                600: 'rgb(var(--color-gray-600) / <alpha-value>)',
                700: 'rgb(var(--color-gray-700) / <alpha-value>)',
                800: 'rgb(var(--color-gray-800) / <alpha-value>)',
                900: 'rgb(var(--color-gray-900) / <alpha-value>)',
                DEFAULT: 'rgb(var(--color-gray) / <alpha-value> )',
            },
            primary: {
                25: 'rgb(var(--color-primary-25) / <alpha-value>)',
                50: 'rgb(var(--color-primary-50) / <alpha-value>)',
                100: 'rgb(var(--color-primary-100) / <alpha-value>)',
                200: 'rgb(var(--color-primary-200) / <alpha-value>)',
                300: 'rgb(var(--color-primary-300) / <alpha-value>)',
                400: 'rgb(var(--color-primary-400) / <alpha-value>)',
                500: 'rgb(var(--color-primary-500) / <alpha-value>)',
                600: 'rgb(var(--color-primary-600) / <alpha-value>)',
                700: 'rgb(var(--color-primary-700) / <alpha-value>)',
                800: 'rgb(var(--color-primary-800) / <alpha-value>)',
                900: 'rgb(var(--color-primary-900) / <alpha-value>)',
                DEFAULT: 'rgb(var(--color-primary) / <alpha-value> )',
            },
            red: {
                25: 'rgb(var(--color-red-25) / <alpha-value>)',
                50: 'rgb(var(--color-red-50) / <alpha-value>)',
                100: 'rgb(var(--color-red-100) / <alpha-value>)',
                200: 'rgb(var(--color-red-200) / <alpha-value>)',
                300: 'rgb(var(--color-red-300) / <alpha-value>)',
                400: 'rgb(var(--color-red-400) / <alpha-value>)',
                500: 'rgb(var(--color-red-500) / <alpha-value>)',
                600: 'rgb(var(--color-red-600) / <alpha-value>)',
                700: 'rgb(var(--color-red-700) / <alpha-value>)',
                800: 'rgb(var(--color-red-800) / <alpha-value>)',
                900: 'rgb(var(--color-red-900) / <alpha-value> )',
            },
            // error color is the same as red but is kept for consistency with legacy code
            error: {
                25: 'rgb(var(--color-error-25) / <alpha-value>)',
                50: 'rgb(var(--color-error-50) / <alpha-value>)',
                100: 'rgb(var(--color-error-100) / <alpha-value>)',
                200: 'rgb(var(--color-error-200) / <alpha-value>)',
                300: 'rgb(var(--color-error-300) / <alpha-value>)',
                400: 'rgb(var(--color-error-400) / <alpha-value>)',
                500: 'rgb(var(--color-error-500) / <alpha-value>)',
                600: 'rgb(var(--color-error-600) / <alpha-value>)',
                700: 'rgb(var(--color-error-700) / <alpha-value>)',
                800: 'rgb(var(--color-error-800) / <alpha-value>)',
                900: 'rgb(var(--color-error-900) / <alpha-value> )',
            },
            warning: {
                25: 'rgb(var(--color-warning-25) / <alpha-value>)',
                50: 'rgb(var(--color-warning-50) / <alpha-value>)',
                100: 'rgb(var(--color-warning-100) / <alpha-value>)',
                200: 'rgb(var(--color-warning-200) / <alpha-value>)',
                300: 'rgb(var(--color-warning-300) / <alpha-value>)',
                400: 'rgb(var(--color-warning-400) / <alpha-value>)',
                500: 'rgb(var(--color-warning-500) / <alpha-value>)',
                600: 'rgb(var(--color-warning-600) / <alpha-value>)',
                700: 'rgb(var(--color-warning-700) / <alpha-value>)',
                800: 'rgb(var(--color-warning-800) / <alpha-value>)',
                900: 'rgb(var(--color-warning-900) / <alpha-value> )',
            },
            success: {
                25: 'rgb(var(--color-green-25) / <alpha-value>)',
                50: 'rgb(var(--color-green-50) / <alpha-value>)',
                100: 'rgb(var(--color-green-100) / <alpha-value>)',
                200: 'rgb(var(--color-green-200) / <alpha-value>)',
                300: 'rgb(var(--color-green-300) / <alpha-value>)',
                400: 'rgb(var(--color-green-400) / <alpha-value>)',
                500: 'rgb(var(--color-green-500) / <alpha-value>)',
                600: 'rgb(var(--color-green-600) / <alpha-value>)',
                700: 'rgb(var(--color-green-700) / <alpha-value>)',
                800: 'rgb(var(--color-green-800) / <alpha-value>)',
                900: 'rgb(var(--color-green-900) / <alpha-value> )',
            },
            teal: {
                25: 'rgb(var(--color-teal-25) / <alpha-value>)',
                50: 'rgb(var(--color-teal-50) / <alpha-value>)',
                100: 'rgb(var(--color-teal-100) / <alpha-value>)',
                200: 'rgb(var(--color-teal-200) / <alpha-value>)',
                300: 'rgb(var(--color-teal-300) / <alpha-value>)',
                400: 'rgb(var(--color-teal-400) / <alpha-value>)',
                500: 'rgb(var(--color-teal-500) / <alpha-value>)',
                600: 'rgb(var(--color-teal-600) / <alpha-value>)',
                700: 'rgb(var(--color-teal-700) / <alpha-value>)',
                800: 'rgb(var(--color-teal-800) / <alpha-value>)',
                900: 'rgb(var(--color-teal-900) / <alpha-value> )',
            },
            cyan: {
                25: 'rgb(var(--color-cyan-25) / <alpha-value>)',
                50: 'rgb(var(--color-cyan-50) / <alpha-value>)',
                100: 'rgb(var(--color-cyan-100) / <alpha-value>)',
                200: 'rgb(var(--color-cyan-200) / <alpha-value>)',
                300: 'rgb(var(--color-cyan-300) / <alpha-value>)',
                400: 'rgb(var(--color-cyan-400) / <alpha-value>)',
                500: 'rgb(var(--color-cyan-500) / <alpha-value>)',
                600: 'rgb(var(--color-cyan-600) / <alpha-value>)',
                700: 'rgb(var(--color-cyan-700) / <alpha-value>)',
                800: 'rgb(var(--color-cyan-800) / <alpha-value>)',
                900: 'rgb(var(--color-cyan-900) / <alpha-value> )',
            },
            'light-blue': {
                25: 'rgb(var(--color-baby-blue-25) / <alpha-value>)',
                50: 'rgb(var(--color-baby-blue-50) / <alpha-value>)',
                100: 'rgb(var(--color-baby-blue-100) / <alpha-value>)',
                200: 'rgb(var(--color-baby-blue-200) / <alpha-value>)',
                300: 'rgb(var(--color-baby-blue-300) / <alpha-value>)',
                400: 'rgb(var(--color-baby-blue-400) / <alpha-value>)',
                500: 'rgb(var(--color-baby-blue-500) / <alpha-value>)',
                600: 'rgb(var(--color-baby-blue-600) / <alpha-value>)',
                700: 'rgb(var(--color-baby-blue-700) / <alpha-value>)',
                800: 'rgb(var(--color-baby-blue-800) / <alpha-value>)',
                900: 'rgb(var(--color-baby-blue-900) / <alpha-value> )',
            },
            indigo: {
                25: 'rgb(var(--color-indigo-25) / <alpha-value>)',
                50: 'rgb(var(--color-indigo-50) / <alpha-value>)',
                100: 'rgb(var(--color-indigo-100) / <alpha-value>)',
                200: 'rgb(var(--color-indigo-200) / <alpha-value>)',
                300: 'rgb(var(--color-indigo-300) / <alpha-value>)',
                400: 'rgb(var(--color-indigo-400) / <alpha-value>)',
                500: 'rgb(var(--color-indigo-500) / <alpha-value>)',
                600: 'rgb(var(--color-indigo-600) / <alpha-value>)',
                700: 'rgb(var(--color-indigo-700) / <alpha-value>)',
                800: 'rgb(var(--color-indigo-800) / <alpha-value>)',
                900: 'rgb(var(--color-indigo-900) / <alpha-value> )',
            },
            purple: {
                25: 'rgb(var(--color-purple-25) / <alpha-value>)',
                50: 'rgb(var(--color-purple-50) / <alpha-value>)',
                100: 'rgb(var(--color-purple-100) / <alpha-value>)',
                200: 'rgb(var(--color-purple-200) / <alpha-value>)',
                300: 'rgb(var(--color-purple-300) / <alpha-value>)',
                400: 'rgb(var(--color-purple-400) / <alpha-value>)',
                500: 'rgb(var(--color-purple-500) / <alpha-value>)',
                600: 'rgb(var(--color-purple-600) / <alpha-value>)',
                700: 'rgb(var(--color-purple-700) / <alpha-value>)',
                800: 'rgb(var(--color-purple-800) / <alpha-value>)',
                900: 'rgb(var(--color-purple-900) / <alpha-value> )',
            },
            pink: {
                25: 'rgb(var(--color-pink-25) / <alpha-value>)',
                50: 'rgb(var(--color-pink-50) / <alpha-value>)',
                100: 'rgb(var(--color-pink-100) / <alpha-value>)',
                200: 'rgb(var(--color-pink-200) / <alpha-value>)',
                300: 'rgb(var(--color-pink-300) / <alpha-value>)',
                400: 'rgb(var(--color-pink-400) / <alpha-value>)',
                500: 'rgb(var(--color-pink-500) / <alpha-value>)',
                600: 'rgb(var(--color-pink-600) / <alpha-value>)',
                700: 'rgb(var(--color-pink-700) / <alpha-value>)',
                800: 'rgb(var(--color-pink-800) / <alpha-value>)',
                900: 'rgb(var(--color-pink-900) / <alpha-value> )',
            },
            rose: {
                25: 'rgb(var(--color-rose-25) / <alpha-value>)',
                50: 'rgb(var(--color-rose-50) / <alpha-value>)',
                100: 'rgb(var(--color-rose-100) / <alpha-value>)',
                200: 'rgb(var(--color-rose-200) / <alpha-value>)',
                300: 'rgb(var(--color-rose-300) / <alpha-value>)',
                400: 'rgb(var(--color-rose-400) / <alpha-value>)',
                500: 'rgb(var(--color-rose-500) / <alpha-value>)',
                600: 'rgb(var(--color-rose-600) / <alpha-value>)',
                700: 'rgb(var(--color-rose-700) / <alpha-value>)',
                800: 'rgb(var(--color-rose-800) / <alpha-value>)',
                900: 'rgb(var(--color-rose-900) / <alpha-value> )',
            },
            orange: {
                25: 'rgb(var(--color-orange-25) / <alpha-value>)',
                50: 'rgb(var(--color-orange-50) / <alpha-value>)',
                100: 'rgb(var(--color-orange-100) / <alpha-value>)',
                200: 'rgb(var(--color-orange-200) / <alpha-value>)',
                300: 'rgb(var(--color-orange-300) / <alpha-value>)',
                400: 'rgb(var(--color-orange-400) / <alpha-value>)',
                500: 'rgb(var(--color-orange-500) / <alpha-value>)',
                600: 'rgb(var(--color-orange-600) / <alpha-value>)',
                700: 'rgb(var(--color-orange-700) / <alpha-value>)',
                800: 'rgb(var(--color-orange-800) / <alpha-value>)',
                900: 'rgb(var(--color-orange-900) / <alpha-value> )',
            },

            /// Tokens
            text: {
                neutral: {
                    primary: 'rgb(var(--text-neutral-primary) / <alpha-value> )',
                    secondary: 'rgb(var(--text-neutral-secondary) / <alpha-value> )',
                    terciary: 'rgb(var(--text-neutral-terciary) / <alpha-value> )',
                    disabled: 'rgb(var(--text-neutral-disabled) / <alpha-value> )',
                    inverse: 'rgb(var(--text-neutral-inverse) / <alpha-value> )',
                },
                colors: {
                    brand: 'rgb(var(--text-colors-brand) / <alpha-value> )',
                    error: 'rgb(var(--text-colors-error) / <alpha-value> )',
                    secondary: 'rgb(var(--text-colors-secondary) / <alpha-value> )',
                    informations: 'rgb(var(--text-colors-informations) / <alpha-value> )',
                    warning: 'rgb(var(--text-colors-warning) / <alpha-value> )',
                    success: 'rgb(var(--text-colors-success) / <alpha-value> )',
                },
                input: {
                    placeholder: 'rgb(var(--text-input-placeholder) / <alpha-value> )',
                    label: 'rgb(var(--text-input-label) / <alpha-value> )',
                    filled: 'rgb(var(--text-input-filled) / <alpha-value> )',
                    disabled: 'rgb(var(--text-input-disabled) / <alpha-value> )',
                    errorMessage: 'rgb(var(--text-input-error-message) / <alpha-value> )',
                    hint: 'rgb(var(--text-input-hint) / <alpha-value> )',
                },
                button: {
                    primary: 'rgb(var(--text-button-primary) / <alpha-value> )',
                    primaryInverse: {
                        default: 'rgb(var(--text-button-other-brand-inverse-default) / <alpha-value> )',
                        hover: 'rgb(var(--text-button-other-brand-inverse-hover) / <alpha-value> )',
                        active: 'rgb(var(--text-button-other-brand-inverse-active) / <alpha-value> )',
                        disabledOnColorBg: 'rgb(var(--text-button-other-brand-inverse-disabled-on-color-bg) / <alpha-value> )',
                        disabledOnWhiteBg: 'rgb(var(--text-button-other-brand-inverse-disabled-on-white-bg) / <alpha-value> )',
                    },
                    secondary: {
                        brand: 'rgb(var(--text-button-other-secondary-brand) / <alpha-value> )',
                        hover: 'rgb(var(--text-button-other-secondary-hover) / <alpha-value> )',
                        active: 'rgb(var(--text-button-secondary-active) / <alpha-value> )',
                        disabledOnColorBg: 'rgb(var(--text-button-secondary-disabled-on-color-bg) / <alpha-value> )',
                        disabledOnWhiteBg: 'rgb(var(--text-button-other-secondary-disabled-on-white-bg) / <alpha-value> )',
                    },
                    gray: {
                        default: 'rgb(var(--text-button-other-gray-default) / <alpha-value> )',
                        hover: 'rgb(var(--text-button-other-gray-hover) / <alpha-value> )',
                        active: 'rgb(var(--text-button-other-gray-active) / <alpha-value> )',
                        disabled: 'rgb(var(--text-button-other-gray-disabled) / <alpha-value> )',
                    },
                    danger: {
                        default: 'rgb(var(--text-button-other-danger-default) / <alpha-value> )',
                        hover: 'rgb(var(--text-button-other-danger-hover) / <alpha-value> )',
                        active: 'rgb(var(--text-button-other-danger-active) / <alpha-value> )',
                        disabledOnColorBg: 'rgb(var(--text-button-other-danger-disabled-on-color-bg) / <alpha-value> )',
                        disabledOnWhiteBg: 'rgb(var(--text-button-other-danger-disabled-on-white-bg) / <alpha-value> )',
                    },
                },
                tooltip: {
                    heading: 'rgb(var(--text-tooltip-heading) / <alpha-value> )',
                    body: 'rgb(var(--text-tooltip-body) / <alpha-value> )',
                },
                stepper: {
                    default: 'rgb(var(--text-stepper-default) / <alpha-value> )',
                },
                table: {
                    heading: 'rgb(var(--text-table-heading) / <alpha-value> )',
                    body: 'rgb(var(--text-table-body) / <alpha-value> )',
                    supporting: 'rgb(var(--text-table-supporting) / <alpha-value> )',
                    disabled: 'rgb(var(--text-table-disabled) / <alpha-value> )',
                },
            },
            background: {
                neutral: {
                    primary: {
                        default: 'rgb(var(--bg-neutral-primary-default) / <alpha-value> )',
                        hover: 'rgb(var(--bg-neutral-primary-hover) / <alpha-value> )',
                        active: 'rgb(var(--bg-neutral-primary-active) / <alpha-value> )',
                        selectedBold: 'rgb(var(--bg-neutral-primary-selected-bold) / <alpha-value> )',
                        selectedSubtile: 'rgb(var(--bg-neutral-primary-selected-subtile)',
                    },
                    terciary: {
                        default: 'rgb(var(--bg-neutral-terciary-default) / <alpha-value> )',
                    },
                    secondary: {
                        default: 'rgb(var(--bg-neutral-secondary-default) / <alpha-value> )',
                        inverse: 'rgb(var(--bg-neutral-secondary-inverse)',
                    },
                    scroll: {
                        default: 'rgb(var(--bg-neutral-scroll-default) / <alpha-value> )',
                        hover: 'rgb(var(--bg-neutral-scroll-hover) / <alpha-value> )',
                    },
                    tabsHover: 'rgb(var(--bg-neutral-tabs-hover) / <alpha-value> )',
                },
                avatar: {
                    default: 'rgb(var(--bg-avatar-default) / <alpha-value> )',
                },
                input: {
                    default: 'rgb(var(--bg-input-default) / <alpha-value> )',
                    disabled: 'rgb(var(--bg-input-disabled) / <alpha-value> )',
                    hoverActive: 'rgb(var(--bg-input-hover-active)',
                },
                checkboxes: {
                    default: 'rgb(var(--bg-checkboxes-default) / <alpha-value> )',
                    hover: 'rgb(var(--bg-checkboxes-hover) / <alpha-value> )',
                    disabled: 'rgb(var(--bg-checkboxes-disabled) / <alpha-value> )',
                    selectedBorder: 'rgb(var(--bg-checkboxes-selected-border) / <alpha-value> )',
                    selectedFilled: 'rgb(var(--bg-checkboxes-selected-filled) / <alpha-value> )',
                    disabledFilled: 'rgb(var(--bg-checkboxes-disabled-filled) / <alpha-value> )',
                },
                banners: {
                    danger: {
                        bold: 'rgb(var(--bg-banners-danger-bold) / <alpha-value> )',
                        subtle: 'rgb(var(--bg-banners-danger-subtle) / <alpha-value> )',
                    },
                    warning: {
                        bold: 'rgb(var(--bg-banners-warning-bold) / <alpha-value> )',
                        subtle: 'rgb(var(--bg-banners-warning-subtle) / <alpha-value> )',
                    },
                    success: {
                        bold: 'rgb(var(--bg-banners-success-bold) / <alpha-value> )',
                        subtle: 'rgb(var(--bg-banners-success-subtle) / <alpha-value> )',
                    },
                    informational: {
                        bold: 'rgb(var(--bg-banners-informational-bold) / <alpha-value> )',
                        subtle: 'rgb(var(--bg-banners-informational-subtle) / <alpha-value> )',
                    },
                },
                button: {
                    primary: {
                        brand: {
                            default: 'rgb(var(--bg-button-primary-brand-default) / <alpha-value> )',
                            hover: 'rgb(var(--bg-button-primary-brand-hover) / <alpha-value> )',
                            active: 'rgb(var(--bg-button-primary-brand-active) / <alpha-value> )',
                            disabled: 'rgb(var(--bg-button-primary-brand-disabled) / <alpha-value> )',
                        },
                        danger: {
                            default: 'rgb(var(--bg-button-primary-danger-default) / <alpha-value> )',
                            hover: 'rgb(var(--bg-button-primary-danger-hover) / <alpha-value> )',
                            active: 'rgb(var(--bg-button-primary-danger-active) / <alpha-value> )',
                            disabled: 'rgb(var(--bg-button-primary-danger-disabled) / <alpha-value> )',
                        },
                    },
                    secondary: {
                        brand: {
                            default: 'var(--bg-button-secondary-brand-color-default)',
                            hover: 'var(--bg-button-secondary-brand-color-hover)',
                            active: 'var(--bg-button-secondary-brand-color-active)',
                            disabled: 'var(--bg-button-secondary-brand-color-disabled)',
                        },
                        dangerOutlined: {
                            default: 'rgb(var(--bg-button-secondary-danger-outlined-default) / <alpha-value> )',
                            hover: 'rgb(var(--bg-button-secondary-danger-outlined-hover) / <alpha-value> )',
                            active: 'rgb(var(--bg-button-secondary-danger-outlined-active) / <alpha-value> )',
                            disabled: 'rgb(var(--bg-button-secondary-danger-outlined-disabled) / <alpha-value> )',
                        },
                        grayOutlined: {
                            default: 'rgb(var(--bg-button-secondary-gray-outlined-default) / <alpha-value> )',
                            hover: 'rgb(var(--bg-button-secondary-gray-outlined-hover) / <alpha-value> )',
                            active: 'rgb(var(--bg-button-secondary-gray-outlined-active) / <alpha-value> )',
                            disabled: 'rgb(var(--bg-button-secondary-gray-outlined-disabled) / <alpha-value> )',
                        },
                    },
                    terciary: {
                        brand: {
                            default: 'rgb(var(--bg-button-terciary-brand-default) / <alpha-value> )',
                            hover: 'rgb(var(--bg-button-terciary-brand-hover) / <alpha-value> )',
                            active: 'rgb(var(--bg-button-terciary-brand-active) / <alpha-value> )',
                            disabled: 'rgb(var(--bg-button-terciary-brand-disabled) / <alpha-value> )',
                        },
                        danger: {
                            default: 'rgb(var(--bg-button-terciary-danger-default) / <alpha-value> )',
                            hover: 'rgb(var(--bg-button-terciary-danger-hover) / <alpha-value> )',
                            active: 'rgb(var(--bg-button-terciary-danger-active) / <alpha-value> )',
                            disabled: 'rgb(var(--bg-button-terciary-danger-disabled) / <alpha-value> )',
                        },
                        gray: {
                            default: 'rgb(var(--bg-button-terciary-gray-default) / <alpha-value> )',
                            hover: 'rgb(var(--bg-button-terciary-gray-hover) / <alpha-value> )',
                            active: 'rgb(var(--bg-button-terciary-gray-active) / <alpha-value> )',
                            disabled: 'rgb(var(--bg-button-terciary-gray-disabled) / <alpha-value> )',
                        },
                    },
                },
                tooltip: 'rgb(var(--bg-tooltip-background) / <alpha-value> )',
                progressBar: {
                    background: 'rgb(var(--bg-progressbar-background) / <alpha-value> )',
                    progressline: 'rgb(var(--bg-progressbar-progressline) / <alpha-value> )',
                },
                stepper: {
                    active: {
                        default: 'rgb(var(--bg-stepper-active-default) / <alpha-value> )',
                        hover: 'rgb(var(--bg-stepper-active-hover) / <alpha-value> )',
                    },
                    error: {
                        default: 'rgb(var(--bg-stepper-error-default) / <alpha-value> )',
                        hover: 'rgb(var(--bg-stepper-error-hover) / <alpha-value> )',
                    },
                },
                table: {
                    header: 'rgb(var(--bg-table-header) / <alpha-value> )',
                    default: 'var(--bg-table-default)',
                    hover: 'rgb(var(--bg-table-hover) / <alpha-value> )',
                    disabled: 'rgb(var(--bg-table-disabled)',
                },
                toggle: {
                    default: 'rgb(var(--bg-toggle-default) / <alpha-value> )',
                    hover: 'rgb(var(--bg-toggle-hover) / <alpha-value> )',
                    disabledFilled: 'rgb(var(--bg-toggle-disabled-filled) / <alpha-value> )',
                    selectedSuccess: 'rgb(var(--bg-toggle-selected-success) / <alpha-value> )',
                    selectedFilled: 'rgb(var(--bg-toggle-selected-filled) / <alpha-value> )',
                },
                menuSelected: 'var(--bg-menu-selected)',
                backdrop: {
                    default: 'var(--bg-backdrop-default)',
                },
                eventCard: {
                    default: {
                        default: 'var(--bg-event-card-default)',
                        hover: 'var(--bg-event-card-default-hover)',
                    },
                    inProgress: {
                        default: 'var(--bg-event-card-in-progress)',
                        hover: 'var(--bg-event-card-in-progress-hover)',
                    },
                    custom: {
                        default: 'var(--bg-event-card-custom)',
                        hover: 'var(--bg-event-card-custom-hover)',
                    },
                    warning: {
                        default: 'var(--bg-event-card-warning)',
                        hover: 'var(--bg-event-card-warning-hover)',
                    },
                    error: {
                        default: 'var(--bg-event-card-error)',
                        hover: 'var(--bg-event-card-error-hover)',
                    },
                    done: {
                        default: 'var(--bg-event-card-done)',
                        hover: 'var(--bg-event-card-done-hover)',
                    },
                },
                eventCardBorder: {
                    default: {
                        default: 'var(--bg-event-card-border-default)',
                        hover: 'var(--bg-event-card-border-default-hover)',
                    },
                    inProgress: {
                        default: 'var(--bg-event-card-border-in-progress)',
                        hover: 'var(--bg-event-card-border-in-progress-hover)',
                    },
                    custom: {
                        default: 'var(--bg-event-card-border-custom)',
                        hover: 'var(--bg-event-card-border-custom-hover)',
                    },
                    warning: {
                        default: 'var(--bg-event-card-border-warning)',
                        hover: 'var(--bg-event-card-border-warning-hover)',
                    },
                    error: {
                        default: 'var(--bg-event-card-border-error)',
                        hover: 'var(--bg-event-card-border-error-hover)',
                    },
                    done: {
                        default: 'var(--bg-event-card-border-done)',
                        hover: 'var(--bg-event-card-border-done-hover)',
                    },
                },
            },
            dataVisualisation: {
                inverse: {
                    ultraSoft: 'var--dataVisualisation-inverse-ultrasoft)',
                    softest: 'var(--dataVisualisation-inverse-softest)',
                    softer: 'var(--dataVisualisation-inverse-softer)',
                    soft: 'var(--dataVisualisation-inverse-soft)',
                    medium: 'var(--dataVisualisation-inverse-medium)',
                    bold: 'var(--dataVisualisation-inverse-bold)',
                },
                cinnamon: {
                    ultraSoft: 'var(--dataVisualisation-cinnamon-ultrasoft)',
                    softest: 'var(--dataVisualisation-cinnamon-softest)',
                    softer: 'var(--dataVisualisation-cinnamon-softer)',
                    soft: 'var(--dataVisualisation-cinnamon-soft)',
                    medium: 'var(--dataVisualisation-cinnamon-medium)',
                    bold: 'var(--dataVisualisation-cinnamon-bold)',
                },
                lemonYellow: {
                    ultraSoft: 'var(--dataVisualisation-lemon-yellow-ultrasoft)',
                    softest: 'var(--dataVisualisation-lemon-yellow-softest)',
                    softer: 'var(--dataVisualisation-lemon-yellow-softer)',
                    soft: 'var(--dataVisualisation-lemon-yellow-soft)',
                    medium: 'var(--dataVisualisation-lemon-yellow-medium)',
                    bold: 'var(--dataVisualisation-lemon-yellow-bold)',
                },
                limeGreen: {
                    ultraSoft: 'var(--dataVisualisation-lime-green-ultrasoft)',
                    softest: 'var(--dataVisualisation-lime-green-softest)',
                    softer: 'var(--dataVisualisation-lime-green-softer)',
                    soft: 'var(--dataVisualisation-lime-green-soft)',
                    medium: 'var(--dataVisualisation-lime-green-medium)',
                    bold: 'var(--dataVisualisation-lime-green-bold)',
                },
                grassGreen: {
                    ultraSoft: 'var(--dataVisualisation-grass-green-ultrasoft)',
                    softest: 'var(--dataVisualisation-grass-green-softest)',
                    softer: 'var(--dataVisualisation-grass-green-softer)',
                    soft: 'var(--dataVisualisation-grass-green-soft)',
                    medium: 'var(--dataVisualisation-grass-green-medium)',
                    bold: 'var(--dataVisualisation-grass-green-bold)',
                },
                teal: {
                    ultraSoft: 'var(--dataVisualisation-teal-ultrasoft)',
                    softest: 'var(--dataVisualisation-teal-softest)',
                    softer: 'var(--dataVisualisation-teal-softer)',
                    soft: 'var(--dataVisualisation-teal-soft)',
                    medium: 'var(--dataVisualisation-teal-medium)',
                    bold: 'var(--dataVisualisation-teal-bold)',
                },
                cyan: {
                    ultraSoft: 'var(--dataVisualisation-cyan-ultrasoft)',
                    softest: 'var(--dataVisualisation-cyan-softest)',
                    softer: 'var(--dataVisualisation-cyan-softer)',
                    soft: 'var(--dataVisualisation-cyan-soft)',
                    medium: 'var(--dataVisualisation-cyan-medium)',
                    bold: 'var(--dataVisualisation-cyan-bold)',
                },
                babyBlue: {
                    ultraSoft: 'var(--dataVisualisation-baby-blue-ultrasoft)',
                    softest: 'var(--dataVisualisation-baby-blue-softest)',
                    softer: 'var(--dataVisualisation-baby-blue-softer)',
                    soft: 'var(--dataVisualisation-baby-blue-soft)',
                    medium: 'var(--dataVisualisation-baby-blue-medium)',
                    bold: 'var(--dataVisualisation-baby-blue-bold)',
                },
                azureBlue: {
                    ultraSoft: 'var(--dataVisualisation-azure-blue-ultrasoft)',
                    softest: 'var(--dataVisualisation-azure-blue-softest)',
                    softer: 'var(--dataVisualisation-azure-blue-softer)',
                    soft: 'var(--dataVisualisation-azure-blue-soft)',
                    medium: 'var(--dataVisualisation-azure-blue-medium)',
                    bold: 'var(--dataVisualisation-azure-blue-bold)',
                },
                indigo: {
                    ultraSoft: 'var(--dataVisualisation-indigo-ultrasoft)',
                    softest: 'var(--dataVisualisation-indigo-softest)',
                    softer: 'var(--dataVisualisation-indigo-softer)',
                    soft: 'var(--dataVisualisation-indigo-soft)',
                    medium: 'var(--dataVisualisation-indigo-medium)',
                    bold: 'var(--dataVisualisation-indigo-bold)',
                },
                wisteria: {
                    ultraSoft: 'var(--dataVisualisation-wisteria-ultrasoft)',
                    softest: 'var(--dataVisualisation-wisteria-softest)',
                    softer: 'var(--dataVisualisation-wisteria-softer)',
                    soft: 'var(--dataVisualisation-wisteria-soft)',
                    medium: 'var(--dataVisualisation-wisteria-medium)',
                    bold: 'var(--dataVisualisation-wisteria-bold)',
                },
                pink: {
                    ultraSoft: 'var(--dataVisualisation-pink-ultrasoft)',
                    softest: 'var(--dataVisualisation-pink-softest)',
                    softer: 'var(--dataVisualisation-pink-softer)',
                    soft: 'var(--dataVisualisation-pink-soft)',
                    medium: 'var(--dataVisualisation-pink-medium)',
                    bold: 'var(--dataVisualisation-pink-bold)',
                },
                gray: {
                    bold: 'var(--dataVisualisation-gray-bold)',
                    medium: 'var(--dataVisualisation-gray-medium)',
                    soft: 'var(--dataVisualisation-gray-soft)',
                    softer: 'var(--dataVisualisation-gray-softer)',
                    softest: 'var(--dataVisualisation-gray-softest)',
                    ultraSoft: 'var(--dataVisualisation-gray-ultrasoft)',
                },
                blue: {
                    softest: 'var(--dataVisualisation-blue-softest)',
                    softer: 'var(--dataVisualisation-blue-softer)',
                    soft: 'var(--dataVisualisation-blue-soft)',
                    medium: 'var(--dataVisualisation-blue-medium)',
                    bold: 'var(--dataVisualisation-blue-bold)',
                },
                green: {
                    softest: 'var(--dataVisualisation-green-softest)',
                    softer: 'var(--dataVisualisation-green-softer)',
                    soft: 'var(--dataVisualisation-green-soft)',
                    medium: 'var(--dataVisualisation-green-medium)',
                    bold: 'var(--dataVisualisation-green-bold)',
                },
                amber: {
                    softest: 'var(--dataVisualisation-amber-softest)',
                    softer: 'var(--dataVisualisation-amber-softer)',
                    soft: 'var(--dataVisualisation-amber-soft)',
                    medium: 'var(--dataVisualisation-amber-medium)',
                    bold: 'var(--dataVisualisation-amber-bold)',
                },
                violet: {
                    ultraSoft: 'var(--dataVisualisation-violet-ultrasoft)',
                    softest: 'var(--dataVisualisation-violet-softest)',
                    softer: 'var(--dataVisualisation-violet-softer)',
                    soft: 'var(--dataVisualisation-violet-soft)',
                    medium: 'var(--dataVisualisation-violet-medium)',
                    bold: 'var(--dataVisualisation-violet-bold)',
                },
                orange: {
                    ultraSoft: 'var(--dataVisualisation-orange-ultrasoft)',
                    softest: 'var(--dataVisualisation-orange-softest)',
                    softer: 'var(--dataVisualisation-orange-softer)',
                    soft: 'var(--dataVisualisation-orange-soft)',
                    medium: 'var(--dataVisualisation-orange-medium)',
                    bold: 'var(--dataVisualisation-orange-bold)',
                },
                red: {
                    ultraSoft: 'var(--dataVisualisation-red-ultrasoft)',
                    softest: 'var(--dataVisualisation-red-softest)',
                    softer: 'var(--dataVisualisation-red-softer)',
                    soft: 'var(--dataVisualisation-red-soft)',
                    medium: 'var(--dataVisualisation-red-medium)',
                    bold: 'var(--dataVisualisation-red-bold)',
                },
            },
            icons: {
                default: 'rgb(var(--icon-default) / <alpha-value> )',
                disabled: 'rgb(var(--icon-disabled) / <alpha-value> )',
                brand: 'rgb(var(--icon-brand) / <alpha-value> )',
                danger: 'rgb(var(--icon-danger) / <alpha-value> )',
                success: 'rgb(var(--icon-success) / <alpha-value> )',
                checkboxes: 'rgb(var(--icon-checkboxes) / <alpha-value> )',
                warning: 'rgb(var(--icon-warning) / <alpha-value> )',
                accent: 'rgb(var(--icon-accent) / <alpha-value> )',
            },

            border: {
                table: 'rgb(var(--border-table) / <alpha-value> )',
                neutral: 'rgb(var(--border-neutral) / <alpha-value> )',
                checkboxes: {
                    default: 'rgb(var(--border-checkboxes-default) / <alpha-value> )',
                    hover: 'rgb(var(--border-checkboxes-hover) / <alpha-value> )',
                    disabled: 'rgb(var(--border-checkboxes-disabled) / <alpha-value> )',
                    active: 'rgb(var(--border-checkboxes-active) / <alpha-value> )',
                },
                button: {
                    brand: {
                        default: 'rgb(var(--border-button-border-brand-default) / <alpha-value> )',
                        hover: 'rgb(var(--border-button-border-brand-hover) / <alpha-value> )',
                        active: 'rgb(var(--border-button-border-brand-active) / <alpha-value> )',
                        disabled: 'rgb(var(--border-button-border-brand-disabled) / <alpha-value> )',
                    },
                    danger: {
                        default: 'rgb(var(--border-button-border-danger-default) / <alpha-value> )',
                        hover: 'rgb(var(--border-button-border-danger-hover) / <alpha-value> )',
                        active: 'rgb(var(--border-button-border-danger-active) / <alpha-value> )',
                        disabled: 'rgb(var(--border-button-border-danger-disabled) / <alpha-value> )',
                    },
                    gray: {
                        default: 'rgb(var(--border-button-border-gray-default) / <alpha-value> )',
                        hover: 'rgb(var(--border-button-border-gray-hover) / <alpha-value> )',
                        active: 'rgb(var(--border-button-border-gray-active) / <alpha-value> )',
                        disabled: 'rgb(var(--border-button-border-gray-disabled) / <alpha-value> )',
                    },
                },
                colors: {
                    brand: {
                        bold: 'rgb(var(--border-colors-brand-bold) / <alpha-value> )',
                        soft: 'rgb(var(--border-colors-brand-soft) / <alpha-value> )',
                    },
                    danger: {
                        bold: 'rgb(var(--border-colors-danger-bold) / <alpha-value> )',
                        soft: 'rgb(var(--border-colors-danger-soft) / <alpha-value> )',
                    },
                },
                input: {
                    default: 'rgb(var(--border-input-default) / <alpha-value> )',
                    hover: 'rgb(var(--border-input-hover) / <alpha-value> )',
                    active: 'rgb(var(--border-input-active) / <alpha-value> )',
                    disabled: 'rgb(var(--border-input-disabled) / <alpha-value> )',
                    error: 'rgb(var(--border-input-error) / <alpha-value> )',
                    backdown: 'rgb(var(--border-input-dropdown))',
                },
                stepper: {
                    neutral: 'rgb(var(--border-stepper-neutral) / <alpha-value> )',
                },
            },

            elevation: {
                overlay: 'rgb(var(--elevation-overlay) / <alpha-value> )',
                raised: 'rgb(var(--elevation-raised) / <alpha-value> )',
                sunken: 'rgb(var(--elevation-sunken) / <alpha-value> )',
            },

            unchanged: {
                light: 'rgb(var(--unchanged--light) / <alpha-value> )',
                dark: 'rgb(var(--unchanged--dark) / <alpha-value>)',
                'blue-300': 'rgb(var(--unchanged--blue-300) / <alpha-value>)',
                'blue-600': 'rgb(var(--unchanged--blue-600) / <alpha-value>)',
                'blue-900': 'rgb(var(--unchanged--blue-900) / <alpha-value>)',
                'gray-400': 'rgb(var(--unchanged--gray-400) / <alpha-value>)',
            },
        },
        extend: {
            spacing: {
                // Width of the sidebar when the app is not in the mobile mode
                sidebar: '56px',
                // Height of the app header, note that there may be legacy code using the const value
                header: '56px',
            },
            fontSize: {
                xxs: '0.63rem', // 10px
                xs: ['0.75rem', '1.125rem'], // 12px, 18px
                sm: ['0.875rem', '1.25rem'], // 14px, 20px
                base: ['1rem', '1.25rem'], // 16px, 20px
                lg: ['1.125rem', '1.75rem'], // 18px, 28px
                xl: ['1.25rem', '1.875rem'], // 20px, 30px
            },
            text: {
                'truncate-2-lines': {
                    display: '-webkit-box',
                    '-webkit-box-orient': 'vertical',
                    '-webkit-line-clamp': '2',
                    overflow: 'hidden',
                    textOverflow: 'ellipsis',
                },
            },
            transitionDuration: {
                default: '200',
            },
            userSelect: {
                none: 'none',
            },
            opacity: {
                '16': '0.16',
                '32': '0.32',
            },
            boxShadow: {
                'general-base': '0px 1px 2px 0px rgba(0, 0, 0, 0.06), 0px 1px 3px 0px rgba(0, 0, 0, 0.10)',
                'general-lg': '0px 4px 6px -2px rgba(0, 0, 0, 0.05), 0px 10px 15px -3px rgba(0, 0, 0, 0.10)',
                'general-tile':
                    '0px 0px 2px -1px rgba(169, 178, 188, 0.02), 0px 0px 4px -1px rgba(136, 149, 183, 0.02), 0px 0px 6px -1px rgba(103, 114, 123, 0.08)',
                'general-focus':
                    '0px 0px 0px 4px rgba(var(--bg-checkboxes-selected-border)), 0px 1px 2px 0px rgba(0, 0, 0, 0.05)',
                'general-focus-dark': '0px 0px 0px 4px rgba(var(--color-primary-900) / .60), 0px 1px 2px 0px rgba(0, 0, 0, 0.05)',
                'error-focus': '0px 0px 0px 4px rgba(var(--color-error-200) / .60), 0px 1px 2px 0px rgba(0, 0, 0, 0.05)',
                'error-focus-dark': '0px 0px 0px 4px rgba(var(--color-error-900) / .60), 0px 1px 2px 0px rgba(0, 0, 0, 0.05)',
            },
            gridTemplateColumns: {
                '15': 'repeat(15, minmax(0, 1fr))',
            },
        },
        borderWidth: {
            DEFAULT: '1px',
            '0': '0',
            '2': '2px',
            '3': '3px',
            '4': '4px',
            '5': '5px',
            '6': '6px',
            '7': '7px',
            '8': '8px',
        },
    },
    variants: {
        userSelect: ['responsive'],
    },
    plugins: [],
    darkMode: 'class',
} satisfies Config
